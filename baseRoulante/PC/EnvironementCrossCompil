#!/bin/sh

#installer la toolchain de crosscompilation :
echo -n "Installer la toolchain (compilateur, binutils, glibc ...) de cross-compilation CodeSourcery (y/n) ?"
read TOOLCHAIN
if [ "$TOOLCHAIN" = "y" ]
then
	echo "Installation de la toolchain ..."
	cd /tmp
	wget http://www.codesourcery.com/sgpp/lite/arm/portal/package7853/public/arm-none-linux-gnueabi/arm-2010.09-50-arm-none-linux-gnueabi.bin
	chmod +x arm-2010.09-50-arm-none-linux-gnueabi.bin
	./arm-2010.09-50-arm-none-linux-gnueabi.bin
else
	echo "Pas d'installation de la toolchain"
fi


echo -n "Installer la librairie Libserial (y/n) ?"
read LIBSERIAL


if [ "$LIBSERIAL" = "y" ]
then
	cd /tmp
	echo " Récupération des sources "
	wget http://freefr.dl.sourceforge.net/project/libserial/libserial/libserial-0.5.2/libserial-0.5.2.tar.gz
	tar xzvf libserial-0.5.2.tar.gz
	cd libserial-0.5.2/
	echo "Configuration des sources"
	DEFAULT_PATH=$HOME/CodeSourcery/Sourcery_G++_Lite/arm-none-linux-gnueabi/
	echo -n " Où est installé le cross-compilateur (default : "
	echo -n $DEFAULT_PATH
	echo -n " ) ?"
	read CROSS_COMPILER_PATH
	if [ CROSS_COMPILER_PATH -n ]
	then
	DEFAULT_PATH=CROSS_COMPILER_PATH
	fi
	./configure CC=arm-none-linux-gnueabi-g++ --host=arm-none-linux-gnueabi --prefix=$DEFAULT_PATH
	echo "Modification des sources (il manque des #include)"
	sed -i.bak '15i#include <string.h>' src/SerialStreamBuf.h
	sed -i.bak '23i#include <string.h>' src/SerialPort.h
	sed -i.bak '23i#include <cstdlib>' src/SerialPort.h
	sed -i.bak '15i#include <string.h>' src/PosixSignalDispatcher.h
	sed -i.bak '1i#include <cstdlib>' examples/read_port.cpp
	sed -i.bak '1i#include <cstdlib>' examples/write_port.cpp
	echo "Compilation"
	make
	echo "Installation"
	make install
else
	echo "Pas d'installation de la libserial"
fi


echo -n "Installer la librairie boost . Cette opération est longue . (y/n) ? "
read BOOST
if [ "$BOOST" =  "y" ]
then
	echo "Installation de boost (la totalité) ..."
	echo "Dependance : bjam"
	echo -n "Installation de bjam (Equivalent de make propre à boost. Nécéssaire à la compilation) (y/n) ?"
	read BJAM
	if [ "$BJAM" = "y" ]
	then
		echo "Installation de bjam"
		#installer bjam pour pouvoir compiler boost
		sudo apt-get install bjam
	else
		echo "Pas d'installation de bjam."
	fi
	#compiler boost
	echo "Récupération des sources de boost v 1.44.0"
	cd /tmp
	wget http://sourceforge.net/projects/boost/files/boost/1.44.0/boost_1_44_0.tar.gz
	echo "Décompression"
	tar xzvf boost_1_44_0.tar.gz
	cd boost_1_44_0/
	echo "Configuration"
	GPP_PATH=$HOME/CodeSourcery/Sourcery_G++_Lite/bin/arm-none-linux-gnueabi-g++
	GPP_VER=`${GPP_PATH} -v 2>&1 | tail -1 | awk '{print $3}'`
	echo "using gcc : ${GPP_VER} : ${GPP_PATH}  ; " > tools/build/v2/user-config.jam
	echo "Compilation"
	sudo bjam --toolset=gcc-${GPP_VER} --prefix=$HOME/CodeSourcery/Sourcery_G++_Lite/arm-none-linux-gnueabi/ install
else
	echo "Pas d'installation de boost"
fi

vlc --vout caca http://www.youtube.com/watch?v=EK2tWVj6lXw
echo
echo
echo
echo "*********************"
echo "*ASCII RICKROLLED !!*"
echo "*********************"
echo
echo
echo

